% This script analysis is the changes due to hormones relate to 
% vasculature.

saveall = 0;
loadold = 1;
plotfigs = 0;

addpath(genpath('/Users/skuech/Documents/toolboxes'));
homeDir = '/Users/skuech/Documents/my_projects/female_gradients/';
scriptDir = fullfile(homeDir,'script');
addpath(genpath(scriptDir));
dataDir = fullfile(homeDir, 'data');
addpath(genpath(dataDir));
outDir = fullfile(homeDir,'output');
addpath(genpath(outDir));
figDir = fullfile(homeDir, 'figures/hormonal_figs');
addpath(figDir);
    
    
if loadold == 0
    clear all
    close all
    loadold = 0;
    saveall = 1;
    plotfigs = 1;
    % make a path to directory
    addpath(genpath('/Users/skuech/Documents/toolboxes'));
    homeDir = '/Users/skuech/Documents/my_projects/female_gradients/';
    scriptDir = fullfile(homeDir,'script');
    addpath(genpath(scriptDir));
    dataDir = fullfile(homeDir, 'data');
    addpath(genpath(dataDir));
    outDir = fullfile(homeDir,'output');
    addpath(genpath(outDir));
    figDir = fullfile(homeDir, 'figures/hormonal_figs');
    addpath(figDir);

    count = 0;

    load 'hormonal_effects_moments.mat'

    % the important variables are 
    % tvals_profilemean, tvals_profileskew, tvals_gradient
    % model 3 = OC women, model 6 = high prog, model 7 = low prog
    % model 8 = high estr, model 9 = low estr

    % load vascular maps
    D = fullfile(dataDir, 'vascular_stuff/');

    map = tvals_profileskew{8};
    atlas_a = readmatrix([D 'mean_Ved_ToF_ThreshtoMNIlin_400.csv']);
    atlas_v = readmatrix([D 'mean_Ved_swi_ThreshtoMNIlin_400.csv']);
    atlas = {atlas_a,atlas_v};
    modelnumber = 9;
    load HCP_T1wT2w_sexdiffsmaps.mat
    mainresults = results;

else if loadold == 1
        load vascular_x_hormones.mat
        keyboard
    end
end


%% run analysis and plot
% close all

for a = 1:2
    vascular_map = atlas{a};
    
    if a == 1
        nameatlas = 'arteries'
    else if a == 2
            nameatlas = 'veins'
        end
    end
    
    
    % plot atlas
    vertices = zeros(20484,1);
    for i = 1:400 %200 parcels per hemisphere
        vertices(find(schaefer_400==i)) = vascular_map(i);
    end      
    f = figure,
    BoSurfStatViewData(vertices,SN,'')
    colormap(cbrewer('seq','Reds',11))
    title(sprintf('Atlas of cerebral %s', nameatlas));
    exportfigbo(f,[figDir, sprintf('Atlas_of_cerebral_%s', nameatlas)],'fig', 10)
    count = count + 1
    FigName{(count)} = sprintf('Atlas_of_cerebral%s.png', nameatlas);
    
    for moment = 1:3
        if moment == 1 
            map_dvals = cohensd_gradient;
            namemoment = 'gradient'
        else if moment == 2
                map_dvals = cohensd_profilemean;
                namemoment = 'profile mean'
            else if moment == 3
                    map_dvals = cohensd_profileskew;
                    namemoment = 'profile skewness'
                end
            end
        end
       
        %first for main effects.
        map = mainresults.Cohensd(:,moment);
        [rho, pval] = corr(map,vascular_map, 'type', 'spearman')
%            if abs(rho) > .10
                %spin test 
                [p_spin, r_dist] = spin_test(map', vascular_map, 'surface_name',...
                'fsa5', 'parcellation_name', 'schaefer_400', 'n_rot', 1000, ...
                'type', 'spearman');

                % plot null distributions, correlation, and spin-p vals 
                f = figure
                his = histogram(r_dist, 50, 'Normalization', 'pdf', 'edgecolor', 'w', ...
                                   'facealpha', 1, 'linewidth', 0.5);
                l = line(rho, 5,'Color', 'k','LineStyle', '-', 'Marker', 'o', 'MarkerFaceColor', 'k');
                xlabel(['Null correlations' newline (sprintf('(sex diffs between %s and vascular map %s)', namemoment, nameatlas))])
                legend(l,['{\it r}=' num2str(round(rho, 2)) newline ...
                                  '{\it p}=' num2str(round(p_spin,3 ))])
                count = count + 1
                FigName{(count)} = sprintf('/HCP_Tw1T2w_sterrec_gene_spin_%s%d.png', namemoment, i);

         % save values
         sexdiffresults.corr_atlas(a, moment, :) = rho; % save corr per model and measure
         sexdiffresults.pval_atlas(a, moment, :) = p_spin; % save pval per model and measure
         sexdiffresults.r_dist(a,moment,:) = r_dist; % save the permuted r distribution
    
                
        % then continue with the hormonal subgroups
        for currmodel = 1:modelnumber
            map = map_dvals{currmodel};
            % correlate stat map and vasculature
            [rho, pval] = corr(map',vascular_map, 'type', 'spearman')
            if abs(rho) > .10
                %spin test 
                [p_spin, r_dist] = spin_test(map', vascular_map, 'surface_name',...
                'fsa5', 'parcellation_name', 'schaefer_400', 'n_rot', 1000, ...
                'type', 'spearman');

               % plot null distributions, correlation, and spin-p vals    
                f = figure
                his = histogram(r_dist, 50, 'Normalization', 'pdf', 'edgecolor', 'w', ...
                                'facealpha', 1, 'linewidth', 0.5);
                l = line(rho, 1.7,'Color', 'k','LineStyle', '-', 'Marker', 'o', 'MarkerFaceColor', 'k');
                xlabel(['Null correlations' newline (sprintf('(%s and %s for model %d)', nameatlas, namemoment, currmodel))])
                xlim([-0.55, 0.55]);
                legend(l,['{\it r}=' num2str(round(rho, 2)) newline ...
                                  '{\it p}=' num2str(round(p_spin,3 ))], 'Location', 'northwest')
                set (gca, 'fontsize', 20, 'fontname', 'Calibri');
                exportfigbo(f,[figDir, sprintf('/Vasc_%s_spin_%s_model%d.fig', nameatlas, namemoment, currmodel)],'png', 10)
                count = count + 1;
                FigName{(count)} = sprintf('/Vasc_%s_spin_%s_model%d.png', nameatlas, namemoment, currmodel);

                % store results
                hormresults.corr_atlas(a, moment, currmodel, :) = rho; % save corr per model and measure
                hormresults.pval_atlas(a, moment, currmodel, :) = p_spin; % save pval per model and measure
                hormresults.rdist_atlas(a, moment, currmodel, :) = r_dist;

                %results.corr_atlas_spin{moment} = {p_spin, r_dist};
                
                bestfit_coefficients = polyfit(map, vascular_map, 1);
                coefficients{currmodel} = bestfit_coefficients;

            end
        end
    end
end


%% for some reason, it doesnt plot the figures. So I am plotting it without
% recalculating the values.

for a = 1:2
    vascular_map = atlas{a};
    if a == 1
        nameatlas = 'arteries'
    else if a == 2
            nameatlas = 'veins'
        end
    end
    for moment = 1:3
        if moment == 1 
            map_dvals = cohensd_gradient;
            namemoment = 'gradient'
        else if moment == 2
                map_dvals = cohensd_profilemean;
                namemoment = 'profile mean'
            else if moment == 3
                    map_dvals = cohensd_profileskew;
                    namemoment = 'profile skewness'
                end
            end
        end
        
        % main effects
        rho = sexdiffresults.corr_atlas(a, moment, :);
        p_spin = sexdiffresults.pval_atlas(a, moment, :);
        r_dist = sediffresults.r_dist(a,moment,:);
      
        f = figure;
        hist = histogram(r_dist, 50, 'Normalization', 'pdf', 'edgecolor', 'w', ...
                           'facealpha', 1, 'linewidth', 0.5);
        l = line(rho, 5,'Color', 'k','LineStyle', '-', 'Marker', 'o', 'MarkerFaceColor', 'k');
        xlabel(['Null correlations' newline (sprintf('(sex diffs between %s and vascular map %s)', namemoment, nameatlas))])
        legend(l,['{\it r}=' num2str(round(rho, 2)) newline ...
                          '{\it p}=' num2str(round(p_spin,3 ))])
        count = count + 1
        FigName{(count)} = sprintf('/HCP_Tw1T2w_sterrec_gene_spin_%s%d.png', namemoment, i);

        for currmodel = 1:modelnumber
            rho = hormresults.corr_atlas(a, moment, currmodel, :);
            p_spin = hormresults.pval_atlas(a, moment, currmodel, :);
            r_dist = hormresults.rdist_atlas(a,moment,:);

      
           % plot null distributions, correlation, and spin-p vals    
            f = figure;
            his = histogram(r_dist, 50, 'Normalization', 'pdf', 'edgecolor', 'w', ...
                            'facealpha', 1, 'linewidth', 0.5);
            l = line(rho, 1.7,'Color', 'k','LineStyle', '-', 'Marker', 'o', 'MarkerFaceColor', 'k');
            xlabel(['Null correlations' newline (sprintf('(%s and %s for model %d)', nameatlas, namemoment, currmodel))])
            xlim([-0.55, 0.55]);
            legend(l,['{\it r}=' num2str(round(rho, 2)) newline ...
                              '{\it p}=' num2str(round(p_spin,3 ))], 'Location', 'northwest')
            set (gca, 'fontsize', 20, 'fontname', 'Calibri');
            exportfigbo(f,[figDir, sprintf('/Vasc_%s_spin_%s_model%d.fig', nameatlas, namemoment, currmodel)],'png', 10)
            count = count + 1;
            FigName{(count)} = sprintf('/Vasc_%s_spin_%s_model%d.png', nameatlas, namemoment, currmodel);
        end
    end
end



%% NEW FIGURE
%map_tvals are my target
% model 3 = OC women, model 6 = high prog, model 7 = low prog
% model 8 = high estr, model 9 = low estr

% predicted order: 3 < 9 < 7 < 6 < 8

[cb] = cbrewer('qual', 'Set1', 6); % define colours
%[cb] = cbrewer('div', 'Spectral', 6); % define colours

for moment = 1:3
    if moment == 1 
        map_dvals = cohensd_gradient;
        namemoment = 'gradient'
    else if moment == 2
            map_dvals = cohensd_profilemean;
            namemoment = 'profile mean'
        else if moment == 3
                map_dvals = cohensd_profileskew;
                namemoment = 'profile skewness'
            end
        end
    end
    bestfit_coefficients3 = coefficientspermoment{1,moment}{1,3};
    bestfit_coefficients6 = coefficientspermoment{1,moment}{1,6};
    bestfit_coefficients7 = coefficientspermoment{1,moment}{1,7};
    bestfit_coefficients8 = coefficientspermoment{1,moment}{1,8};
    bestfit_coefficients9 = coefficientspermoment{1,moment}{1,9};
    dvals3 = map_dvals{3};
    dvals6 = map_dvals{6};
    dvals7 = map_dvals{7};
    dvals8 = map_dvals{8};
    dvals9 = map_dvals{9}

       
    f = figure();
    scatter(map_dvals{6}, atlas_v, 50, '.', 'MarkerEdgeColor', cb(2,:));
    hold on
    plot (map_dvals{6}, polyval(bestfit_coefficients6, dvals6), 'Color', cb(1,:), 'LineWidth', 3);
    scatter(map_dvals{8}, atlas_v, 50, '.', 'MarkerEdgeColor', cb(1,:));
    plot (map_dvals{8}, polyval(bestfit_coefficients8, dvals8), 'Color', cb(2,:), 'LineWidth', 3);
    scatter(map_dvals{7}, atlas_v, 50, '.', 'MarkerEdgeColor', cb(3,:));
    plot (map_dvals{7}, polyval(bestfit_coefficients7, dvals7), 'Color', cb(3,:), 'LineWidth', 3);
    scatter(map_dvals{9}, atlas_v, 50, '.', 'MarkerEdgeColor', cb(4,:));
    plot (map_dvals{9}, polyval(bestfit_coefficients9, dvals9), 'Color', cb(4,:), 'LineWidth', 3);
    scatter(map_dvals{3}, atlas_v, 50, '.', 'MarkerEdgeColor', cb(5,:));
    plot (map_dvals{3}, polyval(bestfit_coefficients3, dvals3), 'Color', cb(5,:), 'LineWidth', 3); 
    legend(['{\it r}_{OC} = ' num2str(round(results.corr_atlas(2, moment, 3, :), 2)) ', {\it pval} =' num2str(round(results.pval_atlas(2, moment, 3, :), 4)) newline ...
        '{\it r}_{low estr} = ' num2str(round(results.corr_atlas(2, moment, 8, :), 2)) ', {\it pval} =' num2str(round(results.pval_atlas(2, moment, 8, :), 4)) newline ...
        '{\it r}_{low prog} = ' num2str(round(results.corr_atlas(2, moment, 6, :), 2)) ', {\it pval} =' num2str(round(results.pval_atlas(2, moment, 6, :), 4)) newline ...
        '{\it r}_{high prog} = ' num2str(round(results.corr_atlas(2, moment, 7, :), 2)) ', {\it pval} =' num2str(round(results.pval_atlas(2, moment, 7, :), 4)) newline ...
        '{\it r}_{high estr} = ' num2str(round(results.corr_atlas(2, moment, 9, :), 2)) ', {\it pval} =' num2str(round(results.pval_atlas(2, moment, 9, :), 4))], 'Location', 'northwest')
    xlabel(sprintf('Cohens d (%s) of hormonal contrasts', namemoment));
    ylabel(sprintf('Presence of Veins'))
     set(gca, 'FontSize', 20, 'fontname', 'Calibri', 'YLim', [0, 0.1], ...
         'YTick', [0, 0.1], 'Xtick', [0,0.3],...
         'XLim', [0, 0.3])
    exportfigbo(f,[figDir, sprintf('/veinswith%s_5hormonalcorrs.fig', namemoment)],'png', 10)
    count = count + 1;
    FigName{(count)} = sprintf('/veinswith%s_5hormonalcorrs.png', namemoment);
end

%% Alternative Figure: Heatmap.
%first: create table.
% table: moment - hormonal contrast - v-map - rval

momentname = [];
horm_contrast = [];
vmap = [];
rvals = [];
pvals = [];

for a = 1:2
    if a == 1 
        atlasname = "arteries"
    else if a == 2
            atlasname = "veins"
        end
    end
        for moment = 1:3
            if moment == 1 
            namemoment = "microstructural gradient"; 
                else if moment == 2
                    namemoment = "profile mean" 
                    else if moment == 3
                        namemoment = "profile skewness"
                        end
                    end
            end
        for currmodel = 1:modelnumber
            momentname = [momentname; namemoment];
            horm_contrast = [horm_contrast; string(modelname{currmodel})];
            vmap = [vmap; atlasname];
            rvals = [rvals; results.corr_atlas(a, moment, currmodel)];
            pvals = [pvals; results.pval_atlas(a, moment, currmodel)];
        end
        end
end

overviewtable = table(momentname, horm_contrast, vmap, rvals, pvals)  
part_table = overviewtable(overviewtable.vmap == "veins", :);
part_table = part_table(part_table.horm_contrast == "Men vs OC women"|part_table.horm_contrast == "Men vs high prog"|part_table.horm_contrast == "Men vs low prog"| part_table.horm_contrast == "Men vs high estr"| part_table.horm_contrast == "Men vs low estr",:);
% part_table1 = part_table(part_table.momentname == "profile mean",:);
% part_table2 = part_table(part_table.momentname == "profile skewness",:);
% part_table3 = part_table(part_table.momentname == "microstructural gradient",:);
% new_table = [part_table1; part_table2; part_table3];

% table: moment - hormonal contrast - v-map - rval
%results.corr_atlas(a, moment, currmodel, :) 

%     dvals3 = map_dvals{3};
%     dvals6 = map_dvals{6};Error: File: hormones_x_vasculature.m Line: 256 Column: 9

%     dvals7 = map_dvals{7};
%     dvals8 = map_dvals{8};
%     dvals9 = map_dvals{9}
    
 colormap(cbrewer('div','RdBu',7))
 figure = f
 heatmap(new_table, 'momentname', 'horm_contrast', 'ColorVariable', 'rvals')
    set(gca, 'FontSize', 20, 'fontname', 'Calibri')
    colormap(flipud(cbrewer('div','RdBu',13)))


% xvar = moment
% yvar = hormonal contrast
% ColorVariable = r value





% horm_x_vasc_tbl = 

%% Save all results

disp(' ...saving results')
if saveall == 1
    save(fullfile(outDir, 'vascular_x_hormones.mat'));
    %save((fullfile(outDir, 'hormonalstuff.mat'), *addhere whatever I want to save*));    
    FigList = findobj(allchild(0), 'flat','Type','figure');
    for iFig = 1:length(FigList)
        FigHandle = FigList(iFig);
        savefig(FigHandle, fullfile(figDir, string(FigName(iFig))));
    end
end

disp(' ...done!:)')

